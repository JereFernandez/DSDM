[comment encoding = UTF-8 /]
[module generateEntity('http://www.example.org/diagramaClasesCompleto')]
[import AcceleoJavaSpring::Property::generateProperty/]
[import AcceleoJavaSpring::Operation::generateOperation/]
[import AcceleoJavaSpring::Relation::generateRelation/]
[import AcceleoJavaSpring::Relation::generateImplementation/]
[import AcceleoJavaSpring::Relation::generateExtension/]
[import AcceleoJavaSpring::controllers::generateEntityController /]
[import AcceleoJavaSpring::Relation::generateRelationNotation /]


[template public generateEntity(c : Clase, art: Artefacto, p : Package, r : Relacion)]
[file ('src/main/java/'+art.grupoId+'.'+art.artefactotId+'/entities/'+p.nombre+'/'+c.nombre+'.java', false, 'UTF-8')]
package [art.grupoId/].[art.artefactotId/].entities.[p.nombre/];

[if (not (c.relaciones_contenidas->isEmpty()))]
import javax.persistence.JoinColumn;
import javax.persistence.CascadeType;
[if (c.relaciones_contenidas->exists(multiplicidad = Multiplicidad::oneToOne))]
import javax.persistence.OneToOne;
[/if]
[if (c.relaciones_contenidas->exists(multiplicidad = Multiplicidad::oneToMany))]
import javax.persistence.OneToMany;
import javax.persistence.JoinTable;
import java.util.ArrayList;
import java.util.List;
import lombok.Builder.Default;
[/if]
[if (c.relaciones_contenidas->exists(multiplicidad = Multiplicidad::manyToOne))]
import javax.persistence.ManyToOne;
[/if]
[if (c.relaciones_contenidas->exists(multiplicidad = Multiplicidad::manyToMany))]
import javax.persistence.ManyToMany;
[if (not(c.relaciones_contenidas->exists(multiplicidad = Multiplicidad::oneToMany)))]
import javax.persistence.JoinTable;
import java.util.ArrayList;
import java.util.List;
import lombok.Builder.Default;
[/if]
[/if]
[/if]
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
[if (c.esAuditable)]import org.hibernate.envers.Audited;[/if]
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

[for (relacion_otro_package : Relacion | c.relaciones_contenidas)]
[if (c.eContainer(Package).nombre <> relacion_otro_package.destino.eContainer(Package).nombre)]
import [art.grupoId/].[art.artefactotId/].entities.[relacion_otro_package.destino.eContainer(Package).nombre/].[relacion_otro_package.destino.nombre/];
[/if]
[/for]

@Entity
@Table(name= "[c.nombre/]")
@Data
@AllArgsConstructor
@NoArgsConstructor
@Builder
[if (c.esAuditable)]@Audited[/if]
public [if(c.esAbstracta)]abstract[/if] class [c.nombre/] [generateExtension(c)/] [generateImplementation(c)/] {

	[if (r <> null and c.esAsociativa = true)]
		[generateAssociativeClassManyToOne(r)/]
		[r.visibilidad/][if (r.esFinal)] final [/if][if (r.esStatic)] static [/if] [r.destino.nombre/] [r.destino.nombre.toLower()/] = new [r.destino.nombre/]();
	[/if]

	[generateProperty(c)/]
	[generateRelation(c, art, p)/]
	[generateOperation(c)/]
	
}
[/file]
[/template]